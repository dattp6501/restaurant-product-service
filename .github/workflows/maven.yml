# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: build and push docker hub
#
# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true



#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout source
#      uses: actions/checkout@v3
#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#
#    - name: Build Project
#      run: mvn clean install -DskipTests
#
#    - name: Login to DockerHub
#      uses: docker/login-action@v2
#      with:
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
#
#    - name: Publish to Docker Hub
#      uses: docker/build-push-action@v3
#      with:
#        repository: ${{secrets.DOCKERHUB_USERNAME}}/notification
#        tags: ${{secrets.DOCKERHUB_USERNAME}}/notification:first
#        push: true


jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Project
        env:
            DB_URL: ${{env.DB_URL}}
            DB_USERNAME: ${{env.DB_USERNAME}}
            DB_PASSWORD: ${{env.DB_PASSWORD}}
        run: mvn clean install -DskipTests

      - name: Login to docker hub
        run: docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_ACCESS_TOKEN}}

      - name: Build docker image
        env:
          DB_URL: ${{env.DB_URL}}
          DB_USERNAME: ${{env.DB_USERNAME}}
          DB_PASSWORD: ${{env.DB_PASSWORD}}
        run: docker build -t ${{secrets.DOCKERHUB_USERNAME}}/restaurent-product-service:first .

      - name: Publish image to docker hub
        run: docker push ${{secrets.DOCKERHUB_USERNAME}}/restaurent-product-service:first
      - name: Test
        env:
          DB_URL: ${{secrets.DB_URL}}
          DB_USERNAME: ${{vars.DB_USERNAME}}
          DB_PASSWORD: ${{vars.DB_PASSWORD}}
        run: echo $DB_URL
