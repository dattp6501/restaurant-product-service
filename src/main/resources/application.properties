spring.application.name=productservice
server.port=9001

#=====================================================date=======================================
spring.jackson.time-zone=UTC
#==================================================config server==================================
spring.cloud.config.enabled=false
spring.cloud.config.import-check.enabled=false
#spring.config.import = optional:configserver:http://localhost:8888
#=================================================== KAFKA ===================
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVER}
kafka.partition = ${KAFKA_PARTITION:2}
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.listener.missing-topics-fatal=false
# Required connection configs for Kafka producer, consumer, and admin
kafka.test=${KAFKA_TEST:false}
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_TEST_USERNAME}' password='${KAFKA_TEST_PASSWORD}';
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.security.protocol=SASL_SSL
# =================================================eureka===========================================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# eureka.instance.hostname=localhost
# ==================================================gateway==========================================
jwt.secret = ${JWT_SECRET_KEY}
# ====================================================database=======================================
# spring.mvc.hiddenmethod.filter.enabled=true
# spring.datasource.url=jdbc:h2:file:~/data/PRODUCT_DB
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.datasource.driverClassName=org.h2.Driver
# spring.h2.console.enabled=true
# spring.h2.console.settings.web-allow-others=true
# spring.datasource.url=jdbc:mysql://mysql:3306/PRODUCT_DB
spring.datasource.url=${DB_URL}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${SHOW_SQL:false}
# logging.level.org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServlet=DEBUG
#=========================================file====================================================
multipart.enabled=true
# =========================================zipkin===============================
# management.tracing.sampling.probability = 1.0
# spring.zipkin.base-url=http://localhost:9411/
# spring.zipkin.enabled=true
# spring.zipkin.sender.type = web
# spring.sleuth.enabled = true
# spring.sleuth.sampler.probability = 1.0
# spring.sleuth.sampler.percentage=1.0
# spring.sleuth.web.skipPattern=(^cleanup.*)

#============================================docker======================
#spring.profiles.active=docker

# =================================  REDIS  ==========================
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
spring.redis.username=${REDIS_USERNAME}
spring.redis.password=${REDIS_PASSWORD}
# =================================   LOG  ===============================
log.host = ${LOG_IP:localhost}
log.port = ${LOG_PORT:9001}
logging.level.com.dattp = ${LOG_LEVEL:error}
logging.level.org.springframework.web = ${LOG_LEVEL:error}
logging.level.org.springframework.data = ${LOG_LEVEL:error}
#=================================== TELEGRAM ===========================
telegram.enable_monitor_system = ${ENABLE_MONITOR_SYSTEM: true}
telegram.monitor_bot_token = ${MONITOR_BOT_TOKEN}
telegram.monitor_bot_chat_id = ${MONITOR_BOT_CHAT_ID}
# ==================================Enable Swagger UI=======================
springfox.documentation.swagger-ui.enabled=${ENABLE_DOC_API:true}